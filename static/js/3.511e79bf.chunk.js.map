{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","profileInfoContainer","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","profileImg","descriptionContainer","profileUsersImg","src","photos","large","usersPhoto","alt","target","files","userProfileDescription","formData","then","initialValues","Post","message","likes","item","MyPosts","React","memo","postsElements","posts","post","id","postsContainer","AddPostReduxForm","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","requiredField","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.511e79bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__2KYa4\",\"profileImg\":\"ProfileInfo_profileImg__Gr4dL\",\"descriptionContainer\":\"ProfileInfo_descriptionContainer__1QDLb\",\"profileUsersImg\":\"ProfileInfo_profileUsersImg__3EifP\",\"userProfileDescription\":\"ProfileInfo_userProfileDescription__1xSVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__XP_MR\",\"posts\":\"MyPosts_posts__SRpRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__5y6dO\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onDoubleClick={activateEditMode}>{status || '--no status--'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                       onChange={onStatusChange}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>save</button></div>\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Full name</b>:\r\n                {createField('Full name', 'fullName', Input, [])}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField('About me', 'aboutMe', Input, [])}\r\n            </div>\r\n            <div>\r\n                <b>LookingForAJob</b>:\r\n                {createField('', 'lookingForAJob', Input,[], {type: 'checkbox'})}\r\n            </div>\r\n            <div>\r\n                <b>Professional skills</b>:\r\n                {createField('Professional skills', 'lookingForAJobDescription', Textarea,[])}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key}>\r\n                    <b>{key}: {createField(key, 'contacts.' + key, Input, [])}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'editProfile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport usersPhoto from \"../../../assets/images/usersPhoto.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const profileUsersImgSelected = (e) => {\r\n        if (e.target.files[0]) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            <div className={s.profileImg}>\r\n                {/*<img\r\n                    src=\"https://in2english.net/wp-content/uploads/2018/06/paints.jpg\"\r\n                    alt=\"\"/>*/}\r\n            </div>\r\n            <div className={s.descriptionContainer}>\r\n                <div className={s.profileUsersImg}>\r\n                    <img src={profile.photos.large || usersPhoto} alt=\"profileUserPhoto\"/>\r\n                    {isOwner && <input type={\"file\"} onChange={profileUsersImgSelected}/>}\r\n\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                <div className={s.userProfileDescription}>\r\n                    {editMode\r\n                        ? <ProfileDataForm profile={profile}\r\n                                           onSubmit={onSubmit}\r\n                                           initialValues={profile}\r\n                        />\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}\r\n                                       profile={profile}\r\n                                       isOwner={isOwner}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>My name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>LookingForAJob</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>Professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './../Post/Post.module.css';\r\n\r\nconst Post = ({message, likes}) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://i.pinimg.com/originals/56/3c/8f/563c8f0114cd530c19c446a869dfdab0.jpg\"\r\n                alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>Likes: {likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './../MyPosts/MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const postsElements = props.posts\r\n        .map(post => <Post key={post.id} message={post.message} likes={post.likes}/>);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsContainer}>\r\n            <h3>My Posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name='newPostText'\r\n                   placeholder='Enter text'\r\n                   validate={[requiredField, maxLength10]}\r\n            />\r\n            <div>\r\n                <button>Add Post</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'addPostForm'})(AddPostForm);\r\n\r\nexport default MyPosts;","import {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n        return (\r\n        <div>\r\n            <ProfileInfo profile={profile}\r\n                         status={status}\r\n                         updateStatus={updateStatus}\r\n                         isOwner={isOwner}\r\n                         savePhoto={savePhoto}\r\n                         saveProfile={saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         savePhoto={this.props.savePhoto}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}