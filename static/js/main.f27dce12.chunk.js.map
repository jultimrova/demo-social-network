{"version":3,"sources":["components/Sidebar/Sidebar.module.css","assets/images/usersPhoto.jpg","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","serviceWorker.js","components/Sidebar/Sidebar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","redux/users-reducer.js","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Sidebar","className","s","nav","item","active","to","activeClassName","friends","News","Music","Settings","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","newMessageText","DialogItem","path","dialog","src","alt","Message","FormControl","input","meta","props","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","requiredField","value","maxLengthCreator","maxLength","length","maxLength100","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsPage","dialogsElements","map","key","messageElements","isAuth","dialogsContainer","dialogsItem","values","onSendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","users","totalUsersCount","isFetching","followInProgress","setCurrentPage","toggleIsFetching","toggleFollowInProgress","usersReducer","u","followed","filter","Users","pagesCount","Math","ceil","pages","i","push","usersContainer","paginator","page","selectedPage","onClick","onPageChanged","user","usersPhoto","photos","small","disabled","some","unfollow","follow","Preloader","style","marginLeft","preloader","getUsers","createSelector","usersPage","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","getFollowInProgress","UsersContainer","pageNumber","resultCode","followSuccess","unfollowSuccess","items","totalCount","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","profileInfoContainer","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","ProfileInfo","profile","profileImg","descriptionContainer","profileUsersImg","large","userProfileDescription","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","userContacts","contacts","facebook","vk","twitter","instagram","github","posts","likes","profileReducer","newPost","newPostText","p","postId","setUserStatus","Post","MyPosts","memo","postsElements","postsContainer","AddPostReduxForm","addPost","maxLength10","MyPostsContainer","profilePage","addPostCreator","Profile","ProfileContainer","params","authUserId","history","getUserProfile","getUserStatus","withRouter","Header","header","login","logout","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","sidebar","app","formReducer","store","createStore","applyMiddleware","thunkMiddleware","App","initializeApp","render","DialogsContainer","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f27dce12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__1N17u\",\"item\":\"Sidebar_item__3YTIZ\",\"active\":\"Sidebar_active__NGft3\",\"friends\":\"Sidebar_friends__31Cph\"};","module.exports = __webpack_public_path__ + \"static/media/usersPhoto.5d3f3632.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.46c9430b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__5y6dO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__WQY7b\",\"dialogsItem\":\"Dialogs_dialogsItem__3kLF8\",\"dialog\":\"Dialogs_dialog__2Z5y9\",\"active\":\"Dialogs_active__2alLM\",\"messages\":\"Dialogs_messages__1npf4\",\"message\":\"Dialogs_message__27dp8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__2KYa4\",\"profileImg\":\"ProfileInfo_profileImg__Gr4dL\",\"descriptionContainer\":\"ProfileInfo_descriptionContainer__1QDLb\",\"profileUsersImg\":\"ProfileInfo_profileUsersImg__3EifP\",\"userProfileDescription\":\"ProfileInfo_userProfileDescription__1xSVB\",\"userContacts\":\"ProfileInfo_userContacts__t0N6k\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './../Sidebar/Sidebar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={s.friends}>\r\n                <h2>Friends</h2>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/1'>NiKo</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/2'>Dasha</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/3'>Julia</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/4'>Mark</NavLink>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'NiKo'},\r\n        {id: 2, name: 'Dasha'},\r\n        {id: 3, name: 'Julia'},\r\n        {id: 4, name: 'Mark'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hi, how are you?'},\r\n        {id: 3, message: 'What is your status?'},\r\n        {id: 4, message: 'Hey'}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = action.newMessageText;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: newMessage}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    const path = '/dialogs/' + id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src=\"https://www.pngitem.com/pimgs/m/63-635457_mi-primer-anime-clip-arts-png-anime-icon.png\" alt=\"\"/>\r\n            <NavLink to={path} activeClassName={s.active}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <li>{message}</li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","export const requiredField = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem key={dialog.id} id={dialog.id} name={dialog.name}/>);\r\n\r\n    let messageElements = state.messages\r\n        .map(message => <Message key={message.id} message={message.message}/>);\r\n\r\n    const addMessage = (values) => {\r\n        props.onSendMessage(values.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogsContainer}>\r\n            <div className={s.dialogsItem}>\r\n                <div>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <AddMessageReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newMessageText'\r\n                       placeholder='Enter Message'\r\n                       validate={[requiredField, maxLength100]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'addMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '2f622bb4-7235-4fc9-b85b-75b00ff9e5b9'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOW_IN_PROGRESS = 'TOGGLE_IS_FOLLOW_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followInProgress: []\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOW_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFetching\r\n                    ? [...state.followInProgress, action.userId]\r\n                    : state.followInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowInProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOW_IN_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowInProgress(true, userId));\r\n\r\n        usersAPI.follow(userId).then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowInProgress(true, userId));\r\n\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport usersPhoto from '../../assets/images/usersPhoto.jpg'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            <div className={s.paginator}>\r\n                {pages.map(page => {\r\n                    return <span className={props.currentPage === page && s.selectedPage}\r\n                                 onClick={() => {props.onPageChanged(page)}}>{page}</span>\r\n                })}\r\n            </div>\r\n            {props.users.map(user => <div key={user.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.usersPhoto}\r\n                             src={user.photos.small != null ? user.photos.small : usersPhoto}\r\n                             alt='usersPhoto'/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={props.followInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {props.unfollow(user.id)}}>\r\n                                Unsubscribe</button>\r\n                            : <button disabled={props.followInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {props.follow(user.id)}}>\r\n                                Subscribe</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                        <div>{user.id}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'user.location.country'}</div>\r\n                        <div>{'user.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import preloader from '../../../assets/images/preloader.svg';\r\nimport React from 'react';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div style={{marginLeft: 510}}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowInProgress = (state) => {\r\n    return state.usersPage.followInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    setCurrentPage,\r\n    toggleFollowInProgress,\r\n    requestUsers,\r\n    unfollow,\r\n    follow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = pageNumber => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followInProgress={this.props.followInProgress}\r\n                   onPageChanged={this.onPageChanged}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*export const mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followInProgress: state.usersPage.followInProgress\r\n    }\r\n}*/\r\n\r\nexport const mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followInProgress: getFollowInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setCurrentPage, toggleFollowInProgress, getUsers: requestUsers})(UsersContainer);","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || '--no status--'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                       onChange={onStatusChange}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            <div className={s.profileImg}>\r\n                {/*<img\r\n                    src=\"https://in2english.net/wp-content/uploads/2018/06/paints.jpg\"\r\n                    alt=\"\"/>*/}\r\n            </div>\r\n            <div className={s.descriptionContainer}>\r\n                <div className={s.profileUsersImg}>\r\n                    <img src={props.profile.photos.large} alt=\"\"/>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                </div>\r\n                <div className={s.userProfileDescription}>\r\n                    <div>About me: {props.profile.aboutMe}</div>\r\n                    <div>My name: {props.profile.fullName}</div>\r\n                    <div>LookingForAJob: {props.profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n                    <div>Job Description: {props.profile.lookingForAJobDescription}</div>\r\n                    <div className={s.userContacts}>Contacts:\r\n                        <div>facebook: {props.profile.contacts.facebook}</div>\r\n                        <div>vk: {props.profile.contacts.vk}</div>\r\n                        <div>twitter: {props.profile.contacts.twitter}</div>\r\n                        <div>instagram: {props.profile.contacts.instagram}</div>\r\n                        <div>github: {props.profile.contacts.github}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi', likes: 10},\r\n        {id: 2, message: 'My first post', likes: 30},\r\n        {id: 3, message: 'What are you doing now?', likes: 20},\r\n        {id: 4, message: 'Hi again', likes: 100}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 2\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n\r\n\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n}\r\n\r\nexport const getUserStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setUserStatus(response.data));\r\n        })\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n        })\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './../Post/Post.module.css';\r\n\r\nconst Post = ({message, likes}) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://pbs.twimg.com/profile_images/1258893227945590785/thQllzB0_400x400.jpg\"\r\n                alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>Likes: {likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './../MyPosts/MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const postsElements = props.posts\r\n        .map(post => <Post message={post.message} likes={post.likes}/>);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsContainer}>\r\n            <h3>My Posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name='newPostText'\r\n                   placeholder='Enter text'\r\n                   validate={[requiredField, maxLength10]}\r\n            />\r\n            <div>\r\n                <button>Add Post</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'addPostForm'})(AddPostForm);\r\n\r\nexport default MyPosts;","import {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n        return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './../Header/Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <img src=\"https://samanvi.in/wp-content/uploads/2018/05/l1.jpg\" alt=\"logo\"/>\r\n\r\n            <div className={s.login}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.authMe()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n                dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'}\r\n                       name={'email'}\r\n                       component={Input}\r\n                       validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'}\r\n                       name={'password'}\r\n                       type={'password'}\r\n                       component={Input}\r\n                       validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox'\r\n                       name={'rememberMe'}\r\n                       component={Input}\r\n                /> remember me\r\n            </div>\r\n            { props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n}\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    sidebar: sidebarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <div className='app-wrapper'>\r\n                        <HeaderContainer/>\r\n                        <Sidebar/>\r\n                        <div className='app-wrapper-content'>\r\n                            <Route path='/profile/:userId?'\r\n                                   render={() => <ProfileContainer/>}/>\r\n                            <Route path='/dialogs'\r\n                                   render={() => <DialogsContainer/>}/>\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer/>}/>\r\n                            <Route path='/news'\r\n                                   render={() => <News/>}/>\r\n                            <Route path='/music'\r\n                                   render={() => <Music/>}/>\r\n                            <Route path='/settings'\r\n                                   render={() => <Settings/>}/>\r\n                            <Route path='/login'\r\n                                   render={() => <Login/>}/>\r\n                        </div>\r\n                    </div>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2FU6-\",\"error\":\"FormsControls_error__t7t3F\",\"formSummaryError\":\"FormsControls_formSummaryError__1dAA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__1Cn1M\",\"usersPhoto\":\"Users_usersPhoto__1671b\",\"paginator\":\"Users_paginator__1I7sI\",\"selectedPage\":\"Users_selectedPage___EKNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__XP_MR\",\"posts\":\"MyPosts_posts__SRpRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3pT-F\",\"login\":\"Header_login__2BJxi\"};"],"sourceRoot":""}