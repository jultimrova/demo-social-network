{"version":3,"sources":["assets/images/usersPhoto.jpg","components/Sidebar/Sidebar.module.css","redux/dialogs-reducer.js","assets/images/preloader.svg","api/api.js","serviceWorker.js","components/Sidebar/Sidebar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/common/Pagination/Pagination.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","newMessageText","sendMessageCreator","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","authMe","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Sidebar","className","s","nav","item","active","to","activeClassName","friends","News","Music","Settings","updateObjectArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","isFetching","followInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Pagination","totalItemsCount","onPageChanged","x","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","p","selectedPage","pageNumber","key","e","User","user","usersPhoto","src","photos","small","alt","disabled","some","Users","props","usersContainer","createSelector","usersPage","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","getFollowInProgress","UsersContainer","this","Preloader","React","Component","connect","bind","page","totalCount","Header","header","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","requiredField","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","fallback","path","render","AppContainer","withRouter","promise","Promise","all","SocialNetworkApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","child","placeholder","component","validators","text","validate","style","marginLeft","preloader","value","maxLengthCreator","maxLength","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_USER_STATUS","posts","likes","profile","newPost","newPostText","postId","addPostCreator","setUserStatus","getUserProfile","getUserStatus"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,wC,mBCC3CD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,KAAO,sBAAsB,OAAS,wBAAwB,QAAU,2B,wHCCjHC,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SAGlBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,oBACjB,CAACH,GAAI,EAAGG,QAAS,wBACjB,CAACH,GAAI,EAAGG,QAAS,SAIZC,EAAiB,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC5D,OAAQA,EAAOC,MACX,IApBa,eAqBT,IAAIC,EAAaF,EAAOG,eACxB,OAAO,2BACAJ,GADP,IAEIH,SAAS,GAAD,mBAAMG,EAAMH,UAAZ,CAAsB,CAACF,GAAI,EAAGG,QAASK,OAGvD,QACI,OAAOH,IAMNK,EAAqB,SAACD,GAAD,MAAqB,CAACF,KAlCnC,eAkCuDE,oB,oBClC5Eb,EAAOC,QAAU,IAA0B,uC,gCCA3C,mHAEMc,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,OAPoB,SAObC,GACH,OAAOd,EAASe,KAAT,iBAAwBD,KAEnCE,SAVoB,SAUXF,GACL,OAAOd,EAASiB,OAAT,iBAA0BH,KAErCI,WAboB,SAaTJ,GACP,OAAOK,EAAWD,WAAWJ,KAIxBK,EAAa,CACtBD,WADsB,SACXJ,GACP,OAAOd,EAASS,IAAI,WAAaK,IAErCM,UAJsB,SAIZN,GACN,OAAOd,EAASS,IAAI,kBAAoBK,IAE5CO,aAPsB,SAOTC,GACT,OAAOtB,EAASuB,IAAT,kBAAgC,CAACD,OAAQA,MAK3CE,EAAU,CACnBC,OADmB,WAEf,OAAOzB,EAASS,IAAT,YAEXiB,MAJmB,SAIbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAO7B,EAASe,KAAT,aAA4B,CAACY,QAAOC,WAAUC,gBAEzDC,OAPmB,WAQf,OAAO9B,EAASiB,OAAT,iB,+JCrCKc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qFC0BSC,EAxCC,WACZ,OACI,yBAAKC,UAAWC,IAAEC,KACd,yBAAKF,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEG,SAC3B,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAEG,QAA1C,YAEJ,yBAAKJ,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASE,GAAG,WAAWC,gBAAiBL,IAAEG,QAA1C,YAEJ,yBAAKJ,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASE,GAAG,SAASC,gBAAiBL,IAAEG,QAAxC,UAEJ,yBAAKJ,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASE,GAAG,QAAQC,gBAAiBL,IAAEG,QAAvC,SAEJ,yBAAKJ,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASE,GAAG,SAASC,gBAAiBL,IAAEG,QAAxC,UAEJ,yBAAKJ,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASE,GAAG,YAAYC,gBAAiBL,IAAEG,QAA3C,aAGJ,yBAAKJ,UAAWC,IAAEM,SACd,uCACA,0BAAMP,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,cAAZ,SAEJ,0BAAML,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,cAAZ,UAEJ,0BAAML,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,cAAZ,UAEJ,0BAAML,UAAWC,IAAEE,MACf,kBAAC,IAAD,CAASE,GAAG,cAAZ,YC5BLG,EARF,WACT,OACI,sCCMOC,EARD,WACV,OACI,uCCMOC,EARE,WACb,OACI,0C,uDCJKC,EAAoB,SAACC,EAAOC,EAAQC,EAAaC,GAC1D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCFTC,EAAS,8BACTC,EAAW,gCACXC,EAAY,iCACZC,EAAmB,wCACnBC,EAAwB,6CACxBC,EAAqB,0CAGvBzE,EAAe,CACf0E,MAAO,GACPC,gBAAiB,EACjBtD,SAAU,GACVD,YAAa,EACbwD,YAAY,EACZC,iBAAkB,IAyCTC,EAAgB,SAACnD,GAAD,MAAa,CAAClB,KAAM2D,EAAQzC,WAC5CoD,EAAkB,SAACpD,GAAD,MAAa,CAAClB,KAAM4D,EAAU1C,WAEhDqD,EAAiB,SAAC5D,GAAD,MAAkB,CAACX,KAAM8D,EAAkBnD,gBAE5D6D,EAAmB,SAACL,GAAD,MAAiB,CAACnE,KAAMgE,EAAoBG,eAC/DM,EAAyB,SAACN,EAAYjD,GAAb,MAAyB,CAC3DlB,KAxDiC,oDAyDjCmE,aACAjD,WAaEwD,EAAkB,uCAAG,WAAOC,EAAUzD,EAAQ0D,EAAWC,GAApC,SAAAC,EAAA,6DACvBH,EAASF,GAAuB,EAAMvD,IADf,SAGA0D,EAAU1D,GAHV,OAIU,IAJV,OAIVF,KAAK+D,YACdJ,EAASE,EAAc3D,IAE3ByD,EAASF,GAAuB,EAAOvD,IAPhB,2CAAH,4DAsBT8D,EAlFa,WAAmC,IAAlClF,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACX,KAAK2D,EACD,OAAO,2BACA7D,GADP,IAEImE,MAAOb,EAAkBtD,EAAMmE,MAAOlE,EAAOmB,OAAQ,KAAM,CAAC+D,UAAU,MAE9E,KAAKrB,EACD,OAAO,2BACA9D,GADP,IAEImE,MAAOb,EAAkBtD,EAAMmE,MAAOlE,EAAOmB,OAAQ,KAAM,CAAC+D,UAAU,MAE9E,KAAKpB,EACD,OAAO,2BAAI/D,GAAX,IAAkBmE,MAAOlE,EAAOkE,QAEpC,KAAKH,EACD,OAAO,2BAAIhE,GAAX,IAAkBa,YAAaZ,EAAOY,cAE1C,KAAKoD,EACD,OAAO,2BAAIjE,GAAX,IAAkBoE,gBAAiBnE,EAAOmE,kBAE9C,KAAKF,EACD,OAAO,2BAAIlE,GAAX,IAAkBqE,WAAYpE,EAAOoE,aAEzC,IAnC6B,oDAoCzB,OAAO,2BACArE,GADP,IAEIsE,iBAAkBrE,EAAOoE,WAAP,sBACRrE,EAAMsE,kBADE,CACgBrE,EAAOmB,SACnCpB,EAAMsE,iBAAiBc,QAAO,SAAAzF,GAAE,OAAIA,IAAOM,EAAOmB,YAIhE,QACI,OAAOpB,I,4ECTJqF,EAzCI,SAAC,GAQhB,IALuB,IAFHC,EAEE,EAFFA,gBAAiBxE,EAEf,EAFeA,SAEf,IAFyBD,mBAEzB,MAFuC,EAEvC,MADF0E,qBACE,MADc,SAAAC,GAAC,OAAIA,GACnB,MADsBC,mBACtB,MADoC,GACpC,EAElBC,EAAaC,KAAKC,KAAKN,EAAkBxE,GAEzC+E,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GATpB,EAUkBQ,mBAAS,GAV3B,mBAUjBC,EAViB,KAUFC,EAVE,KAYlBC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE7C,OACI,yBAAK9C,UAAW2D,IAAG1D,IAAE2D,YAChBL,EAAgB,GACjB,4BAAQM,QAAS,WAAOL,EAAiBD,EAAgB,KAAzD,QAECL,EACIT,QAAO,SAAAqB,GAAC,OAAIA,GAAKL,GAAyBK,GAAKJ,KAC/C1C,KAAI,SAAA8C,GACD,OAAO,0BAAM9D,UAAY2D,IAAG,eACvB1D,IAAE8D,aAAe7F,IAAgB4F,GACnC7D,IAAE+D,YACQC,IAAKH,EACLD,QAAS,SAACK,GACNtB,EAAckB,KACdA,MAGxBT,EAAeE,GAChB,4BAAQM,QAAS,WAAOL,EAAiBD,EAAgB,KAAzD,U,kBCIGY,EAvCF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,KAAMzC,EAAwC,EAAxCA,iBAAkBhD,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,OAC7C,OACQ,6BACI,8BACI,6BACI,kBAAC,IAAD,CAAS6B,GAAI,YAAc+D,EAAKpH,IAChC,yBAAKgD,UAAWC,IAAEoE,WACbC,IAA0B,MAArBF,EAAKG,OAAOC,MAAgBJ,EAAKG,OAAOC,MAAQH,IACrDI,IAAI,iBAGb,6BACKL,EAAK5B,SACA,4BAAQkC,SAAU/C,EACfgD,MAAK,SAAA3H,GAAE,OAAIA,IAAOoH,EAAKpH,MAClB6G,QAAS,WAAOlF,EAASyF,EAAKpH,MAFtC,eAIA,4BAAQ0H,SAAU/C,EACfgD,MAAK,SAAA3H,GAAE,OAAIA,IAAOoH,EAAKpH,MAClB6G,QAAS,WAAOrF,EAAO4F,EAAKpH,MAFpC,eAOd,8BACI,8BACI,6BAAMoH,EAAKnH,MACX,6BAAMmH,EAAKnF,QACX,6BAAMmF,EAAKpH,KAEf,8BACI,6BAAM,yBACN,6BAAM,0BCZf4H,GApBD,SAAC,GAA8E,IAA7E1G,EAA4E,EAA5EA,YAAa0E,EAA+D,EAA/DA,cAAenB,EAAgD,EAAhDA,gBAAiBtD,EAA+B,EAA/BA,SAAUqD,EAAqB,EAArBA,MAAUqD,EAAW,oFACxF,OACI,yBAAK7E,UAAWC,IAAE6E,gBACd,kBAAC,EAAD,CAAY5G,YAAaA,EAAa0E,cAAeA,EACzCD,gBAAiBlB,EAAiBtD,SAAUA,IACxD,6BAEQqD,EAAMR,KAAI,SAAAoD,GAAI,OAAI,kBAAC,EAAD,CAAMH,IAAKG,EAAKpH,GACVoH,KAAMA,EACNzC,iBAAkBkD,EAAMlD,iBACxBhD,SAAUkG,EAAMlG,SAChBH,OAAQqG,EAAMrG,e,mBCV7CP,GAAW8G,cAJC,SAAC1H,GACtB,OAAOA,EAAM2H,UAAUxD,SAG8B,SAACA,GACtD,OAAOA,EAAMiB,QAAO,SAAAxB,GAAC,OAAI,QAGhBgE,GAAqB,SAAC5H,GAC/B,OAAOA,EAAM2H,UAAUvD,iBAGdyD,GAAc,SAAC7H,GACxB,OAAOA,EAAM2H,UAAU7G,UAGdgH,GAAiB,SAAC9H,GAC3B,OAAOA,EAAM2H,UAAU9G,aAGdkH,GAAgB,SAAC/H,GAC1B,OAAOA,EAAM2H,UAAUtD,YAGd2D,GAAsB,SAAChI,GAChC,OAAOA,EAAM2H,UAAUrD,kBCRrB2D,G,4MAMF1C,cAAgB,SAAAoB,GAAe,IACpB7F,EAAY,EAAK0G,MAAjB1G,SACP,EAAK0G,MAAM5G,SAAS+F,EAAY7F,I,kEAPf,IAAD,EACgBoH,KAAKV,MAA9B3G,EADS,EACTA,YAAaC,EADJ,EACIA,SACpBoH,KAAKV,MAAM5G,SAASC,EAAaC,K,+BASjC,OAAO,oCACFoH,KAAKV,MAAMnD,WAAa,kBAAC8D,GAAA,EAAD,MAAe,KACxC,kBAAC,GAAD,CAAO/D,gBAAiB8D,KAAKV,MAAMpD,gBAC5BtD,SAAUoH,KAAKV,MAAM1G,SACrBD,YAAaqH,KAAKV,MAAM3G,YACxBsD,MAAO+D,KAAKV,MAAMrD,MAClBhD,OAAQ+G,KAAKV,MAAMrG,OACnBG,SAAU4G,KAAKV,MAAMlG,SACrBgD,iBAAkB4D,KAAKV,MAAMlD,iBAC7BiB,cAAe2C,KAAK3C,qB,GArBV6C,IAAMC,WAuCpBC,gBAZgB,SAACtI,GAC5B,MAAO,CACHmE,MAAOvD,GAASZ,GAChBoE,gBAAiBwD,GAAmB5H,GACpCc,SAAU+G,GAAY7H,GACtBa,YAAaiH,GAAe9H,GAC5BqE,WAAY0D,GAAc/H,GAC1BsE,iBAAkB0D,GAAoBhI,MAM1C,CAACmB,OL+BiB,SAACC,GAAD,8CAAY,WAAOyD,GAAP,eAAAG,EAAA,6DAC1BF,EAAYnE,IAASQ,OAAOoH,KAAK5H,KADP,SAGxBiE,EAAmBC,EAAUzD,EAAQ0D,EAAWP,GAHxB,2CAAZ,uDK/BTjD,SLqCW,SAACF,GAAD,8CAAY,WAAOyD,GAAP,eAAAG,EAAA,6DAC5BF,EAAYnE,IAASW,SAASiH,KAAK5H,KADP,SAG1BiE,EAAmBC,EAAUzD,EAAQ0D,EAAWN,GAHtB,2CAAZ,uDKrCDC,iBAAgBE,yBAAwB/D,SLWnC,SAAC4H,EAAM1H,GAAP,8CAAoB,WAAO+D,GAAP,eAAAG,EAAA,6DAC5CH,EAASH,GAAiB,IAC1BG,EAASJ,EAAe+D,IAFoB,SAIzB7H,IAASC,SAAS4H,EAAM1H,GAJC,OAItCI,EAJsC,OAK5C2D,EAASH,GAAiB,IAC1BG,GAhBqBV,EAgBHjD,EAAKqC,MAhBS,CAACrD,KAAM6D,EAAWI,WAiBlDU,GAf0BT,EAeHlD,EAAKuH,WAfmB,CAACvI,KAAM+D,EAAuBG,qBAQjC,iCARnB,IAACA,EAFLD,IAUuB,OAApB,wDKZbmE,CACyEL,I,oBCzCzES,GAdA,SAAClB,GACZ,OACI,yBAAK7E,UAAWC,KAAE+F,QACd,yBAAK1B,IAAI,uDAAuDG,IAAI,SAEpE,yBAAKzE,UAAWC,KAAEZ,OACbwF,EAAMoB,OACD,6BAAMpB,EAAMxF,MAAZ,MAAqB,4BAAQwE,QAASgB,EAAMpF,QAAvB,WACrB,kBAAC,IAAD,CAASY,GAAI,UAAb,Y,SCThB6F,GAAgB,oCAElBpJ,GAAe,CACf2B,OAAQ,KACRa,MAAO,KACPD,MAAO,KACP4G,QAAQ,GAgBCE,GAAkB,SAAC1H,EAAQa,EAAOD,EAAO4G,GAAvB,MAC1B,CAAC1I,KAAM2I,GAAeE,QAAS,CAAC3H,SAAQa,QAAOD,QAAO4G,YAE9CI,GAAkB,yDAAM,WAAOnE,GAAP,uBAAAG,EAAA,sEACVlD,IAAQC,SADE,OAGA,KAF3Bd,EAD2B,QAGpBC,KAAK+D,aAAmB,EACRhE,EAASC,KAAKA,KAAlCvB,EAD2B,EAC3BA,GAAIsC,EADuB,EACvBA,MAAOD,EADgB,EAChBA,MAChB6C,EAASiE,GAAgBnJ,EAAIsC,EAAOD,GAAO,KALd,2CAAN,uDA4BhBiH,GA5CY,WAAmC,IAAlCjJ,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACzD,OAAQA,EAAOC,MACX,KAAK2I,GACD,OAAO,2BACA7I,GACAC,EAAO8I,SAGlB,QACI,OAAO/I,IChBbkJ,G,uKAGE,OAAO,kBAAC,GAAWhB,KAAKV,W,GAHFY,IAAMC,WAYrBC,gBALgB,SAACtI,GAAD,MAAY,CACvC4I,OAAQ5I,EAAMmJ,KAAKP,OACnB5G,MAAOhC,EAAMmJ,KAAKnH,SAGmB,CAACI,OD+BpB,yDAAM,WAAOyC,GAAP,SAAAG,EAAA,sEACDlD,IAAQM,SADP,OAGS,IAHT,OAGXlB,KAAK+D,YACdJ,EAASiE,GAAgB,KAAM,KAAM,MAAM,IAJvB,2CAAN,wDC/BPR,CAAoCY,I,gDCyB7CE,GAAiBC,aAAU,CAACC,KAAM,SAAjBD,EAjCL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,0BAAMC,SAAUF,GACXG,aAAY,QAAS,QAASC,KAAO,CAACC,OACtCF,aAAY,WAAY,WAAYC,KAAO,CAACC,MAAgB,CAAC1J,KAAM,aACnEwJ,aAAY,KAAM,aAAcC,KAAO,GAAI,CAACzJ,KAAM,YAAa,eAE/DsJ,GAAS,yBAAK7G,UAAWC,KAAEiH,kBACvBL,GAGL,6BACI,8CA2BDlB,gBAJS,SAACtI,GAAD,MAAY,CAChC4I,OAAQ5I,EAAMmJ,KAAKP,UAGiB,CAAC5G,MFXpB,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAO0C,GAAP,iBAAAG,EAAA,sEAC3BlD,IAAQE,MAAMC,EAAOC,EAAUC,GADJ,OAGjB,KAF3BlB,EAD4C,QAGrCC,KAAK+D,WACdJ,EAASmE,OAELlJ,EAAUmB,EAASC,KAAKrB,SAASiK,OAAS,EAAI7I,EAASC,KAAKrB,SAAS,GAAK,aAC9EgF,EAASkF,aAAW,QAAS,CAACC,OAAQlK,MAPQ,2CAAjC,wDEWNwI,EArBD,SAACd,GAKX,OAAIA,EAAMoB,OACC,kBAAC,IAAD,CAAU5F,GAAI,aAGlB,6BACH,qCACA,kBAACoG,GAAD,CAAgBK,SAVH,SAACQ,GACdzC,EAAMxF,MAAMiI,EAAShI,MAAOgI,EAAS/H,SAAU+H,EAAS9H,mB,QC3B1D+H,GAAsB,yCAExBzK,GAAe,CACf0K,aAAa,GA0BFC,GAvBW,WAAmC,IAAlCpK,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKgK,GACD,OAAO,2BACAlK,GADP,IAEImK,aAAa,IAGrB,QACI,OAAOnK,I,mBCjBfP,GAAe,GAQJ4K,GAJe,WAAmC,IAAlCrK,EAAiC,uDAAzBP,GACnC,OAAOO,G,oBCKPsK,GAAWC,aAAgB,CAC3BC,YAAaC,KACbC,YAAa3K,KACb4H,UAAWzC,EACXyF,QAASN,GACTlB,KAAMF,GACN2B,IAAKR,GACLd,KAAMuB,OAGJC,GAAmBxI,OAAOyI,sCAAwCC,KAOzDC,GANDC,aAAYZ,GAAUQ,GAAiBK,aAAgBC,QCJ/DC,GAAmBjD,IAAMkD,MAAK,kBAAM,iCACpCC,GAAmBnD,IAAMkD,MAAK,kBAAM,iCAEpCE,G,kLAEEtD,KAAKV,MAAMiE,kB,+BAIX,OAAKvD,KAAKV,MAAM2C,YAKZ,yBAAKxH,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,WAAD,CAAU+I,SAAU,kBAACvD,GAAA,EAAD,OAChB,iCACI,kBAAC,IAAD,CAAOwD,KAAK,oBACLC,OAAQ,kBAAM,kBAACL,GAAD,SACrB,kBAAC,IAAD,CAAOI,KAAK,WACLC,OAAQ,kBAAM,kBAACP,GAAD,WAGrB,kBAAC,IAAD,CAAOM,KAAK,SACLC,OAAQ,kBAAM,kBAAC,GAAD,SACrB,kBAAC,IAAD,CAAOD,KAAK,QACLC,OAAQ,kBAAM,kBAAC,EAAD,SACrB,kBAAC,IAAD,CAAOD,KAAK,SACLC,OAAQ,kBAAM,kBAAC,EAAD,SACrB,kBAAC,IAAD,CAAOD,KAAK,YACLC,OAAQ,kBAAM,kBAAC,EAAD,SACrB,kBAAC,IAAD,CAAOD,KAAK,SACLC,OAAQ,kBAAM,kBAAC,GAAD,WAzB9B,kBAACzD,GAAA,EAAD,U,GAPDC,IAAMC,WA2ClBwD,GAAeb,aACjBc,IACAxD,aANoB,SAACtI,GAAD,MAAY,CAChCmK,YAAanK,EAAM4K,IAAIT,eAKE,CAACsB,cH1CD,kBAAM,SAAC5G,GAChC,IAAMkH,EAAUlH,EAASmE,MACzBgD,QAAQC,IAAI,CAACF,IACR/K,MAAK,WACF6D,EAN6B,CAAC3E,KAAMgK,YG0C3Bc,CAE0BQ,IAYhCU,GAVU,SAAC1E,GACtB,OACI,kBAAC,IAAD,CAAe2E,SAAUC,mBACrB,kBAAC,IAAD,CAAUnB,MAAOA,IACb,kBAACY,GAAD,SCjEhBQ,IAAST,OAAO,kBAAC,GAAD,MAAqBU,SAASC,eAAe,SpB6HvD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1L,MAAK,SAAA2L,GACJA,EAAaC,gBAEdC,OAAM,SAAArD,GACLsD,QAAQtD,MAAMA,EAAM1J,a,2LqBrItBiN,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASzD,EAAsB,EAAtBA,MAAQ0D,EAAc,EAAdA,SACpCC,EAAWF,GAAWzD,EAC5B,OACI,yBAAK7G,UAAWC,IAAEwK,YAAc,KAAOD,EAAWvK,IAAE4G,MAAQ,KACxD,6BACK0D,GAEJC,GAAY,8BAAO3D,KAKnB6D,EAAW,SAAC7F,GAAW,IACzB8F,EAAoC9F,EAApC8F,MAAuBC,GAAa/F,EAA7BwF,KAA6BxF,EAAvBgG,MADW,YACYhG,EADZ,2BAE/B,OAAO,kBAACuF,EAAgBvF,EAAO,8CAAc8F,EAAWC,MAG/C5D,EAAQ,SAACnC,GAAW,IACtB8F,EAAoC9F,EAApC8F,MAAuBC,GAAa/F,EAA7BwF,KAA6BxF,EAAvBgG,MADQ,YACehG,EADf,2BAE5B,OAAO,kBAACuF,EAAgBvF,EAAO,2CAAW8F,EAAWC,MAG5C7D,EAAc,SAAC+D,EAAa7N,EAAM8N,EAAWC,GAA/B,IAA2CnG,EAA3C,uDAAmD,GAAIoG,EAAvD,uDAA6D,GAA7D,OACvB,6BACI,kBAAC,IAAD,eAAOH,YAAaA,EACb7N,KAAMA,EACN8N,UAAWA,EACXG,SAAUF,GACNnG,IALf,IAMQoG,K,sECtBGzF,IARG,SAACX,GACf,OACI,yBAAKsG,MAAO,CAACC,WAAY,MACrB,yBAAK9G,IAAK+G,IAAW5G,IAAI,iB,mBCLrC7H,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,mBCA3HD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,WAAa,4B,mBCA9ED,EAAOC,QAAU,CAAC,UAAY,8BAA8B,WAAa,+BAA+B,aAAe,mC,gCCDvH,oEAAO,IAAMoK,EAAgB,SAAAqE,GACzB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMnE,OAASqE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCNlC5O,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,6PCCpD4O,EAAW,kCACXC,EAAc,qCACdC,EAAmB,0CACnBC,EAAkB,yCAEpB9O,EAAe,CACf+O,MAAO,CACH,CAAC7O,GAAI,EAAGG,QAAS,KAAM2O,MAAO,IAC9B,CAAC9O,GAAI,EAAGG,QAAS,gBAAiB2O,MAAO,IACzC,CAAC9O,GAAI,EAAGG,QAAS,0BAA2B2O,MAAO,IACnD,CAAC9O,GAAI,EAAGG,QAAS,WAAY2O,MAAO,MAExCC,QAAS,KACT9M,OAAQ,IAGC6I,EAAiB,WAAmC,IAAlCzK,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAKkO,EACD,IAAIO,EAAU,CACVhP,GAAI,EACJG,QAASG,EAAO2O,YAChBH,MAAO,GAEX,OAAO,2BACAzO,GADP,IAEIwO,MAAM,GAAD,mBAAMxO,EAAMwO,OAAZ,CAAmBG,MAIhC,KAAKN,EACD,OAAO,2BAAIrO,GAAX,IAAkBwO,MAAOxO,EAAMwO,MAAMpJ,QAAO,SAAAqB,GAAC,OAAIA,EAAE9G,KAAOM,EAAO4O,YAGrE,KAAKP,EACD,OAAO,2BAAItO,GAAX,IAAkB0O,QAASzO,EAAOyO,UAGtC,KAAKH,EACD,OAAO,2BAAIvO,GAAX,IAAkB4B,OAAQ3B,EAAO2B,SAErC,QACI,OAAO5B,IAIN8O,EAAiB,SAACF,GAAD,MAAkB,CAAC1O,KAAMkO,EAAUQ,gBAGpDG,EAAgB,SAACnN,GAAD,MAAa,CAAC1B,KAAMqO,EAAiB3M,WAErDoN,EAAiB,SAAC5N,GAAD,8CAAY,WAAOyD,GAAP,eAAAG,EAAA,sEACfrE,IAASa,WAAWJ,GADL,OAChCH,EADgC,OAGtC4D,GAN2B6J,EAMHzN,EAASC,KANO,CAAChB,KAAMoO,EAAkBI,aAG3B,iCAHZ,IAACA,IAGW,OAAZ,uDAMjBO,EAAgB,SAAC7N,GAAD,8CAAY,WAAOyD,GAAP,eAAAG,EAAA,sEACdvD,IAAWC,UAAUN,GADP,OAC/BH,EAD+B,OAGrC4D,EAASkK,EAAc9N,EAASC,OAHK,2CAAZ,uDAMhBS,EAAe,SAACC,GAAD,8CAAY,WAAOiD,GAAP,SAAAG,EAAA,sEACbvD,IAAWE,aAAaC,GADX,OAGH,IAHG,OAGvBV,KAAK+D,YACdJ,EAASkK,EAAcnN,IAJS,2CAAZ,yD","file":"static/js/main.65d490d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/usersPhoto.5d3f3632.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__1N17u\",\"item\":\"Sidebar_item__3YTIZ\",\"active\":\"Sidebar_active__NGft3\",\"friends\":\"Sidebar_friends__31Cph\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'NiKo'},\r\n        {id: 2, name: 'Dasha'},\r\n        {id: 3, name: 'Julia'},\r\n        {id: 4, name: 'Mark'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hi, how are you?'},\r\n        {id: 3, message: 'What is your status?'},\r\n        {id: 4, message: 'Hey'}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = action.newMessageText;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: newMessage}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText});\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.46c9430b.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '2f622bb4-7235-4fc9-b85b-75b00ff9e5b9'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './../Sidebar/Sidebar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={s.friends}>\r\n                <h2>Friends</h2>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/1'>NiKo</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/2'>Dasha</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/3'>Julia</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/4'>Mark</NavLink>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","export const updateObjectArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW';\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW';\r\nconst SET_USERS = 'social-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOW_IN_PROGRESS = 'social-network/users/TOGGLE_IS_FOLLOW_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followInProgress: []\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOW_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFetching\r\n                    ? [...state.followInProgress, action.userId]\r\n                    : state.followInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOW_IN_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setUsersCount(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowInProgress(true, userId));\r\n\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from './Pagination.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst Pagination = ({\r\n                        totalItemsCount, pageSize, currentPage = 1,\r\n                        onPageChanged = x => x, portionSize = 20\r\n                    }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={cn(s.paginator)}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={ cn({\r\n                        [s.selectedPage]: currentPage === p\r\n                    }, s.pageNumber) }\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport usersPhoto from '../../assets/images/usersPhoto.jpg'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst User = ({user, followInProgress, unfollow, follow}) => {\r\n    return (\r\n            <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.usersPhoto}\r\n                             src={user.photos.small != null ? user.photos.small : usersPhoto}\r\n                             alt='usersPhoto'/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {unfollow(user.id)}}>\r\n                                Unsubscribe</button>\r\n                            : <button disabled={followInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {follow(user.id)}}>\r\n                                Subscribe</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                        <div>{user.id}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'user.location.country'}</div>\r\n                        <div>{'user.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            <Pagination currentPage={currentPage} onPageChanged={onPageChanged}\r\n                        totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n            <div>\r\n                {\r\n                    users.map(user => <User key={user.id}\r\n                                            user={user}\r\n                                            followInProgress={props.followInProgress}\r\n                                            unfollow={props.unfollow}\r\n                                            follow={props.follow}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowInProgress = (state) => {\r\n    return state.usersPage.followInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    setCurrentPage,\r\n    toggleFollowInProgress,\r\n    requestUsers,\r\n    unfollow,\r\n    follow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = pageNumber => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followInProgress={this.props.followInProgress}\r\n                   onPageChanged={this.onPageChanged}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followInProgress: getFollowInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setCurrentPage, toggleFollowInProgress, getUsers: requestUsers})(UsersContainer);","import React from 'react';\r\nimport s from './../Header/Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <img src=\"https://samanvi.in/wp-content/uploads/2018/05/l1.jpg\" alt=\"logo\"/>\r\n\r\n            <div className={s.login}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.authMe()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', Input, [requiredField])}\r\n            {createField('Password', 'password', Input, [requiredField], {type: 'password'})}\r\n            {createField(null, 'rememberMe', Input, [], {type: 'checkbox'}, 'remember me')}\r\n\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'social-network/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    const promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n}\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    sidebar: sidebarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n//window.store = store;\r\n\r\nexport default store;","import React, {Suspense} from 'react';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Sidebar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Suspense fallback={<Preloader/>}>\r\n                        <section>\r\n                            <Route path='/profile/:userId?'\r\n                                   render={() => <ProfileContainer/>}/>\r\n                            <Route path='/dialogs'\r\n                                   render={() => <DialogsContainer/>}/>\r\n                        </section>\r\n                    </Suspense>\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer/>}/>\r\n                            <Route path='/news'\r\n                                   render={() => <News/>}/>\r\n                            <Route path='/music'\r\n                                   render={() => <Music/>}/>\r\n                            <Route path='/settings'\r\n                                   render={() => <Settings/>}/>\r\n                            <Route path='/login'\r\n                                   render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SocialNetworkApp = (props) => {\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default SocialNetworkApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport SocialNetworkApp from \"./App\";\n\nReactDOM.render(<SocialNetworkApp/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props = {}, text ='') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import preloader from '../../../assets/images/preloader.svg';\r\nimport React from 'react';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div style={{marginLeft: 450}}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2FU6-\",\"error\":\"FormsControls_error__t7t3F\",\"formSummaryError\":\"FormsControls_formSummaryError__1dAA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__1Cn1M\",\"usersPhoto\":\"Users_usersPhoto__1671b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Pagination_paginator__30mnl\",\"pageNumber\":\"Pagination_pageNumber__3JUhQ\",\"selectedPage\":\"Pagination_selectedPage__3aOTQ\"};","export const requiredField = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3pT-F\",\"login\":\"Header_login__2BJxi\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'social-network/profile/ADD_POST';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\r\nconst SET_USER_PROFILE = 'social-network/profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'social-network/profile/SET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi', likes: 10},\r\n        {id: 2, message: 'My first post', likes: 30},\r\n        {id: 3, message: 'What are you doing now?', likes: 20},\r\n        {id: 4, message: 'Hi again', likes: 100}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 2\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n\r\n\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}