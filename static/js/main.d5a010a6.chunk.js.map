{"version":3,"sources":["components/Sidebar/Sidebar.module.css","assets/images/usersPhoto.jpg","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Sidebar/Sidebar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","likes","profile","profileReducer","state","action","type","newPost","newPostText","filter","p","postId","setUserStatus","dialogs","name","messages","dialogsReducer","newMessage","newMessageText","sidebarReducer","users","totalUsersCount","isFetching","followInProgress","setCurrentPage","toggleIsFetching","toggleFollowInProgress","usersReducer","map","u","followed","login","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","sidebar","auth","app","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Sidebar","className","s","nav","item","active","to","activeClassName","friends","News","Music","Settings","DialogItem","path","dialog","src","alt","Message","FormControl","input","meta","props","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","requiredField","value","maxLengthCreator","maxLength","length","maxLength100","AddMessageReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","key","messageElements","dialogsContainer","dialogsItem","values","onSendMessage","mapStateToPropsForRedirect","compose","connect","sendMessageCreator","Component","RedirectComponent","this","React","Users","pagesCount","Math","ceil","pages","i","push","usersContainer","paginator","page","selectedPage","onClick","onPageChanged","user","usersPhoto","photos","small","disabled","some","unfollow","follow","Preloader","style","marginLeft","preloader","getUsers","createSelector","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","getFollowInProgress","UsersContainer","pageNumber","followSuccess","unfollowSuccess","items","totalCount","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","profileInfoContainer","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","ProfileInfo","profileImg","descriptionContainer","profileUsersImg","large","userProfileDescription","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","userContacts","contacts","facebook","vk","twitter","instagram","github","Post","MyPosts","memo","postsElements","postsContainer","AddPostReduxForm","addPost","maxLength10","MyPostsContainer","addPostCreator","Profile","ProfileContainer","params","authUserId","history","getUserProfile","getUserStatus","withRouter","Header","header","logout","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","App","initializeApp","render","DialogsContainer","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d5a010a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__1N17u\",\"item\":\"Sidebar_item__3YTIZ\",\"active\":\"Sidebar_active__NGft3\",\"friends\":\"Sidebar_friends__31Cph\"};","module.exports = __webpack_public_path__ + \"static/media/usersPhoto.5d3f3632.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.46c9430b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__5y6dO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__WQY7b\",\"dialogsItem\":\"Dialogs_dialogsItem__3kLF8\",\"dialog\":\"Dialogs_dialog__2Z5y9\",\"active\":\"Dialogs_active__2alLM\",\"messages\":\"Dialogs_messages__1npf4\",\"message\":\"Dialogs_message__27dp8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__2KYa4\",\"profileImg\":\"ProfileInfo_profileImg__Gr4dL\",\"descriptionContainer\":\"ProfileInfo_descriptionContainer__1QDLb\",\"profileUsersImg\":\"ProfileInfo_profileUsersImg__3EifP\",\"userProfileDescription\":\"ProfileInfo_userProfileDescription__1xSVB\",\"userContacts\":\"ProfileInfo_userContacts__t0N6k\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '2f622bb4-7235-4fc9-b85b-75b00ff9e5b9'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi', likes: 10},\r\n        {id: 2, message: 'My first post', likes: 30},\r\n        {id: 3, message: 'What are you doing now?', likes: 20},\r\n        {id: 4, message: 'Hi again', likes: 100}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 2\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n\r\n\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n}\r\n\r\nexport const getUserStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setUserStatus(response.data));\r\n        })\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n        })\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'NiKo'},\r\n        {id: 2, name: 'Dasha'},\r\n        {id: 3, name: 'Julia'},\r\n        {id: 4, name: 'Mark'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hi, how are you?'},\r\n        {id: 3, message: 'What is your status?'},\r\n        {id: 4, message: 'Hey'}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = action.newMessageText;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: newMessage}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n\r\n}\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOW_IN_PROGRESS = 'TOGGLE_IS_FOLLOW_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followInProgress: []\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOW_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFetching\r\n                    ? [...state.followInProgress, action.userId]\r\n                    : state.followInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowInProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOW_IN_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowInProgress(true, userId));\r\n\r\n        usersAPI.follow(userId).then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowInProgress(true, userId));\r\n\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.authMe()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n                dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    sidebar: sidebarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport s from './../Sidebar/Sidebar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={s.friends}>\r\n                <h2>Friends</h2>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/1'>NiKo</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/2'>Dasha</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/3'>Julia</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to='/dialogs/4'>Mark</NavLink>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    const path = '/dialogs/' + id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src=\"https://www.pngitem.com/pimgs/m/63-635457_mi-primer-anime-clip-arts-png-anime-icon.png\" alt=\"\"/>\r\n            <NavLink to={path} activeClassName={s.active}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <li>{message}</li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","export const requiredField = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem key={dialog.id} id={dialog.id} name={dialog.name}/>);\r\n\r\n    let messageElements = state.messages\r\n        .map(message => <Message key={message.id} message={message.message}/>);\r\n\r\n    const addMessage = (values) => {\r\n        props.onSendMessage(values.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogsContainer}>\r\n            <div className={s.dialogsItem}>\r\n                <div>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <AddMessageReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newMessageText'\r\n                       placeholder='Enter Message'\r\n                       validate={[requiredField, maxLength100]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'addMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport usersPhoto from '../../assets/images/usersPhoto.jpg'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            <div className={s.paginator}>\r\n                {pages.map(page => {\r\n                    return <span className={props.currentPage === page && s.selectedPage}\r\n                                 onClick={() => {props.onPageChanged(page)}}>{page}</span>\r\n                })}\r\n            </div>\r\n            {props.users.map(user => <div key={user.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.usersPhoto}\r\n                             src={user.photos.small != null ? user.photos.small : usersPhoto}\r\n                             alt='usersPhoto'/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={props.followInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {props.unfollow(user.id)}}>\r\n                                Unsubscribe</button>\r\n                            : <button disabled={props.followInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {props.follow(user.id)}}>\r\n                                Subscribe</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                        <div>{user.id}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'user.location.country'}</div>\r\n                        <div>{'user.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import preloader from '../../../assets/images/preloader.svg';\r\nimport React from 'react';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div style={{marginLeft: 510}}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowInProgress = (state) => {\r\n    return state.usersPage.followInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    setCurrentPage,\r\n    toggleFollowInProgress,\r\n    requestUsers,\r\n    unfollow,\r\n    follow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = pageNumber => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followInProgress={this.props.followInProgress}\r\n                   onPageChanged={this.onPageChanged}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*export const mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followInProgress: state.usersPage.followInProgress\r\n    }\r\n}*/\r\n\r\nexport const mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followInProgress: getFollowInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setCurrentPage, toggleFollowInProgress, getUsers: requestUsers})(UsersContainer);","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || '--no status--'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                       onChange={onStatusChange}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            <div className={s.profileImg}>\r\n                {/*<img\r\n                    src=\"https://in2english.net/wp-content/uploads/2018/06/paints.jpg\"\r\n                    alt=\"\"/>*/}\r\n            </div>\r\n            <div className={s.descriptionContainer}>\r\n                <div className={s.profileUsersImg}>\r\n                    <img src={props.profile.photos.large} alt=\"\"/>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                </div>\r\n                <div className={s.userProfileDescription}>\r\n                    <div>About me: {props.profile.aboutMe}</div>\r\n                    <div>My name: {props.profile.fullName}</div>\r\n                    <div>LookingForAJob: {props.profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n                    <div>Job Description: {props.profile.lookingForAJobDescription}</div>\r\n                    <div className={s.userContacts}>Contacts:\r\n                        <div>facebook: {props.profile.contacts.facebook}</div>\r\n                        <div>vk: {props.profile.contacts.vk}</div>\r\n                        <div>twitter: {props.profile.contacts.twitter}</div>\r\n                        <div>instagram: {props.profile.contacts.instagram}</div>\r\n                        <div>github: {props.profile.contacts.github}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './../Post/Post.module.css';\r\n\r\nconst Post = ({message, likes}) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://pbs.twimg.com/profile_images/1258893227945590785/thQllzB0_400x400.jpg\"\r\n                alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>Likes: {likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './../MyPosts/MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const postsElements = props.posts\r\n        .map(post => <Post message={post.message} likes={post.likes}/>);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsContainer}>\r\n            <h3>My Posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name='newPostText'\r\n                   placeholder='Enter text'\r\n                   validate={[requiredField, maxLength10]}\r\n            />\r\n            <div>\r\n                <button>Add Post</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'addPostForm'})(AddPostForm);\r\n\r\nexport default MyPosts;","import {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n        return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './../Header/Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <img src=\"https://samanvi.in/wp-content/uploads/2018/05/l1.jpg\" alt=\"logo\"/>\r\n\r\n            <div className={s.login}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'}\r\n                       name={'email'}\r\n                       component={Input}\r\n                       validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'}\r\n                       name={'password'}\r\n                       type={'password'}\r\n                       component={Input}\r\n                       validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox'\r\n                       name={'rememberMe'}\r\n                       component={Input}\r\n                /> remember me\r\n            </div>\r\n            { props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import React from 'react';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Sidebar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/profile/:userId?'\r\n                           render={() => <ProfileContainer/>}/>\r\n                    <Route path='/dialogs'\r\n                           render={() => <DialogsContainer/>}/>\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/news'\r\n                           render={() => <News/>}/>\r\n                    <Route path='/music'\r\n                           render={() => <Music/>}/>\r\n                    <Route path='/settings'\r\n                           render={() => <Settings/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2FU6-\",\"error\":\"FormsControls_error__t7t3F\",\"formSummaryError\":\"FormsControls_formSummaryError__1dAA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__1Cn1M\",\"usersPhoto\":\"Users_usersPhoto__1671b\",\"paginator\":\"Users_paginator__1I7sI\",\"selectedPage\":\"Users_selectedPage___EKNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__XP_MR\",\"posts\":\"MyPosts_posts__SRpRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3pT-F\",\"login\":\"Header_login__2BJxi\"};"],"sourceRoot":""}