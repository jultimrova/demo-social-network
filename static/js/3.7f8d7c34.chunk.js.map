{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","profileInfoContainer","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","profileImg","descriptionContainer","profileUsersImg","src","photos","large","usersPhoto","mainPhoto","alt","userProfileDescription","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","userContacts","contacts","facebook","vk","twitter","instagram","github","Preloader","Post","message","likes","item","MyPosts","React","memo","postsElements","posts","map","post","postsContainer","AddPostReduxForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,qBAAuB,0CAA0C,WAAa,gCAAgC,qBAAuB,0CAA0C,gBAAkB,qCAAqC,uBAAyB,4CAA4C,aAAe,kCAAkC,UAAY,iC,oBCA1XD,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,MAAQ,yB,oBCA3ED,EAAOC,QAAU,CAAC,KAAO,qB,+HC4CVC,EA1CgB,SAACC,GAAW,IAAD,EACRC,oBAAS,GADD,mBACjCC,EADiC,KACvBC,EADuB,OAEZF,mBAASD,EAAMI,QAFH,mBAEjCA,EAFiC,KAEzBC,EAFyB,KAItCC,qBAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAeV,OACI,yBAAKG,UAAWC,IAAEC,uBACZP,GACF,6BACI,0BAAMQ,cAjBO,WACrBP,GAAY,KAgBoCC,GAAU,kBAGrDF,GACD,6BACI,2BAAOS,WAAW,EACXC,OAnBQ,WACvBT,GAAY,GACZH,EAAMa,aAAaT,IAkBJU,MAAOV,EACPW,SAhBI,SAACC,GACpBX,EAAUW,EAAEC,cAAcH,a,kBCoBnBI,EAnCK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASf,EAA0B,EAA1BA,OAAQS,EAAkB,EAAlBA,aACnC,OAAKM,EAKD,yBAAKZ,UAAWC,IAAEC,sBACd,yBAAKF,UAAWC,IAAEY,aAKlB,yBAAKb,UAAWC,IAAEa,sBACd,yBAAKd,UAAWC,IAAEc,iBACd,yBAAKC,IAAKJ,EAAQK,OAAOC,OAASC,IAAYnB,UAAWC,IAAEmB,UAAWC,IAAI,qBAC1E,kBAAC,EAAD,CAAwBxB,OAAQA,EAAQS,aAAcA,KAE1D,yBAAKN,UAAWC,IAAEqB,wBACd,0CAAgBV,EAAQW,SACxB,yCAAeX,EAAQY,UACvB,gDAAsBZ,EAAQa,eAAiB,MAAQ,MACvD,iDAAuBb,EAAQc,2BAC/B,yBAAK1B,UAAWC,IAAE0B,cAAlB,YACI,0CAAgBf,EAAQgB,SAASC,UACjC,oCAAUjB,EAAQgB,SAASE,IAC3B,yCAAelB,EAAQgB,SAASG,SAChC,2CAAiBnB,EAAQgB,SAASI,WAClC,wCAAcpB,EAAQgB,SAASK,YAzBxC,kBAACC,EAAA,EAAD,O,4CCSAC,EAdF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MACpB,OACI,yBAAKrC,UAAWC,IAAEqC,MACd,yBACItB,IAAI,gFACJK,IAAI,KACPe,EACD,6BACI,wCAAcC,M,iCCJxBE,EAAUC,IAAMC,MAAK,SAAAhD,GACvB,IAAMiD,EAAgBjD,EAAMkD,MACvBC,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMT,QAASS,EAAKT,QAASC,MAAOQ,EAAKR,WAM1D,OACI,yBAAKrC,UAAWC,IAAE6C,gBACd,wCACA,6BACI,kBAACC,EAAD,CAAkBC,SARX,SAACC,GAChBxD,EAAMyD,QAAQD,EAAOE,iBASjB,yBAAKnD,UAAWC,IAAE0C,OACbD,OAMXU,EAAcC,YAAiB,IAkB/BN,EAAmBO,YAAU,CAACC,KAAM,eAAjBD,EAhBL,SAAC7D,GACjB,OACI,0BAAMuD,SAAUvD,EAAM+D,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,KAAK,cACLC,YAAY,aACZC,SAAU,CAACC,IAAeX,KAEjC,6BACI,4CACA,+CAQDb,I,QC3BAyB,EAFUC,aAfD,SAACC,GACrB,MAAO,CACHvB,MAAOuB,EAAMC,YAAYxB,MACzBQ,YAAae,EAAMC,YAAYhB,gBAIZ,SAACiB,GACxB,MAAO,CACHlB,QAAS,SAACC,GACNiB,EAASC,YAAelB,QAKXc,CAA6C1B,GCJvD+B,EAXC,SAAC,GAAqC,IAApC1D,EAAmC,EAAnCA,QAASf,EAA0B,EAA1BA,OAAQS,EAAkB,EAAlBA,aAC3B,OACA,6BACI,kBAAC,EAAD,CAAaM,QAASA,EACTf,OAAQA,EACRS,aAAcA,IAC3B,kBAAC,EAAD,Q,eCHNiE,E,kLAEE,IAAIC,EAASC,KAAKhF,MAAMiF,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKhF,MAAMmF,aAEhBH,KAAKhF,MAAMoF,QAAQC,KAAK,UAGhCL,KAAKhF,MAAMsF,eAAeP,GAC1BC,KAAKhF,MAAMuF,cAAcR,K,+BAIzB,OACI,6BACI,kBAAC,EAAD,iBAAaC,KAAKhF,MAAlB,CACSmB,QAAS6D,KAAKhF,MAAMmB,QACpBf,OAAQ4E,KAAKhF,MAAMI,OACnBS,aAAcmE,KAAKhF,MAAMa,qB,GAnBnBkC,IAAMyC,WAiCtBC,sBACXjB,aARoB,SAACC,GAAD,MAAY,CAChCtD,QAASsD,EAAMC,YAAYvD,QAC3Bf,OAAQqE,EAAMC,YAAYtE,OAC1B+E,WAAYV,EAAMiB,KAAKX,OACvBY,OAAQlB,EAAMiB,KAAKC,UAIM,CAACL,mBAAgBC,kBAAe1E,mBACzD+E,IAFWH,CAGbX","file":"static/js/3.7f8d7c34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__2KYa4\",\"profileImg\":\"ProfileInfo_profileImg__Gr4dL\",\"descriptionContainer\":\"ProfileInfo_descriptionContainer__1QDLb\",\"profileUsersImg\":\"ProfileInfo_profileUsersImg__3EifP\",\"userProfileDescription\":\"ProfileInfo_userProfileDescription__1xSVB\",\"userContacts\":\"ProfileInfo_userContacts__t0N6k\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3Fvww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__XP_MR\",\"posts\":\"MyPosts_posts__SRpRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__5y6dO\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || '--no status--'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                       onChange={onStatusChange}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport usersPhoto from \"../../../assets/images/usersPhoto.jpg\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            <div className={s.profileImg}>\r\n                {/*<img\r\n                    src=\"https://in2english.net/wp-content/uploads/2018/06/paints.jpg\"\r\n                    alt=\"\"/>*/}\r\n            </div>\r\n            <div className={s.descriptionContainer}>\r\n                <div className={s.profileUsersImg}>\r\n                    <img src={profile.photos.large || usersPhoto} className={s.mainPhoto} alt=\"profileUserPhoto\"/>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                <div className={s.userProfileDescription}>\r\n                    <div>About me: {profile.aboutMe}</div>\r\n                    <div>My name: {profile.fullName}</div>\r\n                    <div>LookingForAJob: {profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n                    <div>Job Description: {profile.lookingForAJobDescription}</div>\r\n                    <div className={s.userContacts}>Contacts:\r\n                        <div>facebook: {profile.contacts.facebook}</div>\r\n                        <div>vk: {profile.contacts.vk}</div>\r\n                        <div>twitter: {profile.contacts.twitter}</div>\r\n                        <div>instagram: {profile.contacts.instagram}</div>\r\n                        <div>github: {profile.contacts.github}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './../Post/Post.module.css';\r\n\r\nconst Post = ({message, likes}) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://pbs.twimg.com/profile_images/1258893227945590785/thQllzB0_400x400.jpg\"\r\n                alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>Likes: {likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './../MyPosts/MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const postsElements = props.posts\r\n        .map(post => <Post message={post.message} likes={post.likes}/>);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsContainer}>\r\n            <h3>My Posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name='newPostText'\r\n                   placeholder='Enter text'\r\n                   validate={[requiredField, maxLength10]}\r\n            />\r\n            <div>\r\n                <button>Add Post</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'addPostForm'})(AddPostForm);\r\n\r\nexport default MyPosts;","import {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n        return (\r\n        <div>\r\n            <ProfileInfo profile={profile}\r\n                         status={status}\r\n                         updateStatus={updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}