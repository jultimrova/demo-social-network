{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","id","name","path","className","s","dialog","active","src","alt","to","activeClassName","Message","message","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messageElements","messages","isAuth","dialogsContainer","dialogsItem","values","onSendMessage","newMessageText","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCcpNC,EAXI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACfC,EAAO,YAAcF,EAE3B,OACI,yBAAKG,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,yBAAKC,IAAI,yFAAyFC,IAAI,KACtG,kBAAC,IAAD,CAASC,GAAIP,EAAMQ,gBAAiBN,IAAEE,QAASL,KCC5CU,EARC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,yBAAKT,UAAWC,IAAEQ,SACd,4BAAKA,K,yCCkCXC,EAAeC,YAAiB,KAoBhCC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAlBL,SAACE,GACpB,OACI,0BAAMC,SAAUD,EAAME,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXtB,KAAK,iBACLuB,YAAY,gBACZC,SAAU,CAACC,IAAeb,MAGrC,6BACI,wCACA,+CAQDc,EArDC,SAACT,GACb,IAAIU,EAAQV,EAAMW,YAEdC,EAAkBF,EAAMG,QACvBC,KAAI,SAAA3B,GAAM,OAAI,kBAAC,EAAD,CAAY4B,IAAK5B,EAAOL,GAAIA,GAAIK,EAAOL,GAAIC,KAAMI,EAAOJ,UAEvEiC,EAAkBN,EAAMO,SACvBH,KAAI,SAAApB,GAAO,OAAI,kBAAC,EAAD,CAASqB,IAAKrB,EAAQZ,GAAIY,QAASA,EAAQA,aAM/D,OAAKM,EAAMkB,OAGP,yBAAKjC,UAAWC,IAAEiC,kBACd,yBAAKlC,UAAWC,IAAEkC,aACd,6BACKR,IAIT,yBAAK3B,UAAWC,IAAE+B,UACbD,EACD,kBAACnB,EAAD,CAAqBI,SAhBd,SAACoB,GAChBrB,EAAMsB,cAAcD,EAAOE,qBAGL,kBAAC,IAAD,CAAUhC,GAAI,Y,wCClBtCiC,EAA6B,SAACd,GAAD,MAAY,CAC3CQ,OAAQR,EAAMe,KAAKP,S,OCeRQ,sBACXC,aAfoB,SAACjB,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACiB,GACxB,MAAO,CACHN,cAAe,SAACC,GACZK,EAASC,YAAmBN,UDPR,SAACO,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKhC,MAAMkB,OACT,kBAACY,EAAcE,KAAKhC,OADI,kBAAC,IAAD,CAAUT,GAAI,eAJV,GAEX0C,IAAMH,WAQtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCI9DL,CAGbjB","file":"static/js/4.3a146169.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__WQY7b\",\"dialogsItem\":\"Dialogs_dialogsItem__3kLF8\",\"dialog\":\"Dialogs_dialog__2Z5y9\",\"active\":\"Dialogs_active__2alLM\",\"messages\":\"Dialogs_messages__1npf4\",\"message\":\"Dialogs_message__27dp8\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    const path = '/dialogs/' + id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src=\"https://www.pngitem.com/pimgs/m/63-635457_mi-primer-anime-clip-arts-png-anime-icon.png\" alt=\"\"/>\r\n            <NavLink to={path} activeClassName={s.active}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <li>{message}</li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem key={dialog.id} id={dialog.id} name={dialog.name}/>);\r\n\r\n    let messageElements = state.messages\r\n        .map(message => <Message key={message.id} message={message.message}/>);\r\n\r\n    const addMessage = (values) => {\r\n        props.onSendMessage(values.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogsContainer}>\r\n            <div className={s.dialogsItem}>\r\n                <div>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <AddMessageReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newMessageText'\r\n                       placeholder='Enter Message'\r\n                       validate={[requiredField, maxLength100]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'addMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}